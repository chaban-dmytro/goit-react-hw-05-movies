{"version":3,"file":"static/js/681.d31acccb.chunk.js","mappings":"yNAiEA,UA7DgB,WACd,OAAwBA,EAAAA,EAAAA,YAAxB,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QA0BR,OAxBAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,6FACQC,EAAe,CACnBC,OAAQ,MACRC,IAAI,sCAAD,OAAwCL,EAAxC,YACHM,OAAQ,CAAEC,SAAU,QAASC,KAAM,KACnCC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NARR,mBAY4BC,EAAAA,EAAAA,IAAUT,GAZtC,OAYUU,EAZV,OAaIhB,EAAQgB,EAAUjB,KAAKkB,SACvBf,EAAU,YAdd,gDAgBIA,EAAU,YACVgB,QAAQC,IAAR,MAjBJ,0DADc,uBAAC,WAAD,wBAsBdC,EACD,GAAE,CAACjB,KAEF,8BACc,SAAXF,EAAoB,MACnB,+BACE,iBAAKoB,UAAU,UAAf,UACc,YAAXpB,IAAwB,kCACb,aAAXA,IAAyB,gDACd,aAAXA,IACkB,IAAhBF,EAAKuB,QACJ,uEAEA,+BACE,wBACGvB,EAAKwB,KAAI,YAA0B,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACnB,OACE,2BACE,uBAAID,KACJ,uBAAIC,MAFGD,EAKZ,eASpB,C","sources":["components/Reviews.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { fetchById } from 'api';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const [data, setData] = useState();\n  const [status, setStatus] = useState('idle');\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function fetchData() {\n      const optionsForId = {\n        method: 'GET',\n        url: `https://api.themoviedb.org/3/movie/${movieId}/reviews`,\n        params: { language: 'en-US', page: '1' },\n        headers: {\n          accept: 'application/json',\n          Authorization:\n            'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzZGMyZmM3OWE5Njc5NTQ5MTJjYTVhYWQ0NWI5NTU3NCIsInN1YiI6IjY1MDA0YzQzMWJmMjY2MDBmZmI1YWI1ZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.zirrhOIT7yqxW1n0pdlMVLkB4-AicQWjZCs5JhftH6Q',\n        },\n      };\n      try {\n        const movieById = await fetchById(optionsForId);\n        setData(movieById.data.results);\n        setStatus('resolved');\n      } catch (error) {\n        setStatus('rejected');\n        console.log(error);\n      }\n    }\n    // eslint-disable-next-line\n    fetchData();\n  }, [movieId]);\n  return (\n    <>\n      {status === 'idle' ? null : (\n        <>\n          <div className=\"wrapper\">\n            {status === 'pending' && <div>LOAD</div>}\n            {status === 'rejected' && <div>Error! Reload page</div>}\n            {status === 'resolved' &&\n              (data.length === 0 ? (\n                <div>We don`t have any reviews for this movie</div>\n              ) : (\n                <>\n                  <ul>\n                    {data.map(({ author, content }) => {\n                      return (\n                        <li key={author}>\n                          <p>{author}</p>\n                          <p>{content}</p>\n                        </li>\n                      );\n                    })}\n                  </ul>\n                </>\n              ))}\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["useState","data","setData","status","setStatus","movieId","useParams","useEffect","optionsForId","method","url","params","language","page","headers","accept","Authorization","fetchById","movieById","results","console","log","fetchData","className","length","map","author","content"],"sourceRoot":""}